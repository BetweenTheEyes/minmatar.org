---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

import { is_prod_mode } from '@helpers/env'
import { HTTP_404_Not_Found } from '@helpers/http_responses'

if (is_prod_mode())
    return HTTP_404_Not_Found()

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? Astro.cookies.get('auth_token').value : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false

if (!auth_token || !user)
    return HTTP_404_Forbidden()

import type { CorporationObject } from '@dtypes/layout_components'
import { get_corporations_for_corporations_list } from '@helpers/fetching/corporations'

let corporations:CorporationObject[] = []
let get_all_corporations_error:string | false = false
try {
    corporations = await get_corporations_for_corporations_list(auth_token, user.user_id)
} catch (error) {
    get_all_corporations_error = is_prod_mode() ? t('get_all_corporations_error') : error.message
}

import { get_app_url } from '@helpers/env'
const CORPORATIONS_LIST_PARTIAL_URL = `${get_app_url()}/partials/corporations_list_component/`

console.log(corporations)
import Viewport from '@layouts/Viewport.astro';

import PageDefault from '@components/page/PageDefault.astro';
import PageTitle from '@components/page/PageTitle.astro';

import TextBox from '@components/layout/TextBox.astro';

import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';

import CorporationsList from '@components/blocks/CorporationsList.astro';
import Button from '@components/blocks/Button.astro';

import RefreshIcon from '@components/icons/buttons/RefreshIcon.astro';
import ButtonStack from '@components/blocks/ButtonStack.astro';

const page_title = t('corporations.list.page_title');
---

<Viewport
    title={page_title}
    components={{
        alert_dialog: true,
        confirm_dialog: true,
    }}
>
    <PageDefault
        cover={{
            image: "/images/alliance-cover.jpg",
            image_990: "/images/alliance-cover-990.jpg",
            alt: t('groups.cover_alt'),
            animated: false,
            scrollable: true,
            overlay: true
        }}
        x-data={`{
            corporation_name: '',
        }`}
    >
        <FlexInline slot="header" justification='space-between'>
            <FlexInline>
                <Flexblock gap="var(--space-3xs)">
                    <PageTitle>
                        {page_title}
                    </PageTitle>
                    <small>{corporations.length} {corporations.length != 1 ? t('corporations').toLowerCase() : t('corporation').toLowerCase()}</small>
                </Flexblock>
            </FlexInline>
        </FlexInline>

        <Flexblock gap="var(--space-xl)">
            <TextBox>
                <p>{t('corporations.list.leading_text')}</p>
            </TextBox>

            <CorporationsList corporations={corporations}>
                {get_all_corporations_error !== false &&
                    <Flexblock>
                        <p>{get_all_corporations_error}</p>
                        <ButtonStack>
                            <Button
                                size='sm'
                                hx-get={CORPORATIONS_LIST_PARTIAL_URL}
                                hx-target="#corporations-list"
                                hx-on::before-request="this.setAttribute('disabled','')"
                                hx-on::after-request="this.removeAttribute('disabled')"
                                hx-swap="outerHTML transition:true"
                                type="button"
                            >
                                <RefreshIcon slot="icon" />
                                {t('reload')}
                            </Button>
                        </ButtonStack>
                    </Flexblock>
                }
            </CorporationsList>
        </Flexblock>
	</PageDefault>
</Viewport>

<style lang="scss">
    h3 {
        margin-block-start: var(--space-l);
    }
</style>